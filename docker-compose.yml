version: "3"

volumes:
  postgres_data:
  es-data:

services:
  django: &django
    build:
      context: .
      dockerfile: ./backend/deploy/Dockerfile
    image: content-tester-django-local
    depends_on:
      - es
      - postgres
      - redis
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8100"
    ports:
      - "8100:8100"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - CELERY_BROKER_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://es:9200/
    volumes:
      - ./:/app
    restart: on-failure
    stop_signal: sigkill

  postgres:
    image: postgres:14.3-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis
    stop_signal: sigkill

  celeryworker:
    <<: *django
    image: content-tester-django-local_celeryworker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELASTICSEARCH_URL=http://es:9200/
    depends_on:
      - redis
      - postgres

    ports: []
    command: bash -c "watchmedo auto-restart --directory=/app --pattern=*.py --ignore-patterns=*~ --recursive -- celery -A contenttester worker -l INFO"

  celerybeat:
    <<: *django
    image: content-tester-django-local_celerybeat
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELASTICSEARCH_URL=http://es:9200/
    depends_on:
      - redis
      - postgres

    ports: []
    command: bash -c "watchmedo auto-restart --directory=/app --pattern=*.py --ignore-patterns=*~ --recursive -- celery -A contenttester beat -l INFO"

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    deploy:
      resources:
        limits:
          memory: 8Gb
    volumes:
      - es-data:/usr/share/elasticsearch/data
    logging:
      driver: none
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.0
    environment:
      ELASTICSEARCH_HOSTS: http://es:9200/
    depends_on:
      - es
    ports:
      - 5601:5601
    logging:
      driver: none
    stop_signal: sigkill
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]

  web:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    image: semantic-unit-testing-nextjs
    command: yarn dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_ENDPOINT=http://localhost:8100/
    volumes:
      - ./:/app
    restart: on-failure
    stop_signal: sigkill
