version: "3"

volumes:
  postgres_data:

services:
  django: &django
    build:
      context: .
      dockerfile: ./backend/deploy/Dockerfile
    image: content-tester-django-local
    depends_on:
      - postgres
      - redis
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8100"
    ports:
      - "8100:8100"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - ./:/app
    restart: on-failure
    stop_signal: sigkill

  postgres:
    image: postgres:14.3-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis
    stop_signal: sigkill

  celeryworker:
    <<: *django
    image: content-tester-django-local_celeryworker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - MENDABLE_API_KEY=${MENDABLE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
      - postgres

    ports: []
    command: bash -c "watchmedo auto-restart --directory=/app --pattern=*.py --ignore-patterns=*~ --recursive -- celery -A contenttester worker -l INFO"

  celerybeat:
    <<: *django
    image: content-tester-django-local_celerybeat
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - MENDABLE_API_KEY=${MENDABLE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
      - postgres

    ports: []
    command: bash -c "watchmedo auto-restart --directory=/app --pattern=*.py --ignore-patterns=*~ --recursive -- celery -A contenttester worker -l INFO"
